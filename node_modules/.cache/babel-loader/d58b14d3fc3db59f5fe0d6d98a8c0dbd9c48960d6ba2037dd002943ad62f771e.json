{"ast":null,"code":"var _jsxFileName = \"F:\\\\Universidad\\\\Dise\\xF1o de Software\\\\cartelera-cine\\\\my_app2\\\\src\\\\pages\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { API_KEY, BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = ({\n  match\n}) => {\n  _s();\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`${BASE_URL}/movie/${match.params.id}?api_key=${API_KEY}`);\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [match.params.id]);\n  if (!movieDetails) {\n    // Devolver el mensaje de carga sin un contenedor adicional\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Loading movie details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`,\n      alt: movieDetails.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movieDetails.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", movieDetails.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Vote Average: \", movieDetails.vote_average]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"3Xw5p5XygTBdYtFd5yWowQ3nnzY=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_KEY","BASE_URL","jsxDEV","_jsxDEV","MovieDetails","match","_s","movieDetails","setMovieDetails","fetchMovieDetails","response","get","params","id","data","error","console","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","title","src","poster_path","alt","overview","release_date","vote_average","_c","$RefreshReg$"],"sources":["F:/Universidad/DiseÃ±o de Software/cartelera-cine/my_app2/src/pages/MovieDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { API_KEY, BASE_URL } from '../config';\r\n\r\nconst MovieDetails = ({ match }) => {\r\n  const [movieDetails, setMovieDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`${BASE_URL}/movie/${match.params.id}?api_key=${API_KEY}`);\r\n        setMovieDetails(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [match.params.id]);\r\n\r\n  if (!movieDetails) {\r\n    // Devolver el mensaje de carga sin un contenedor adicional\r\n    return <p style={{ textAlign: 'center', marginTop: '20px' }}>Loading movie details...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{movieDetails.title}</h2>\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\r\n        alt={movieDetails.title}\r\n      />\r\n      <p>{movieDetails.overview}</p>\r\n      <p>Release Date: {movieDetails.release_date}</p>\r\n      <p>Vote Average: {movieDetails.vote_average}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAEV,QAAS,UAASI,KAAK,CAACO,MAAM,CAACC,EAAG,YAAWb,OAAQ,EAAC,CAAC;QAC3FQ,eAAe,CAACE,QAAQ,CAACI,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDN,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,KAAK,CAACO,MAAM,CAACC,EAAE,CAAC,CAAC;EAErB,IAAI,CAACN,YAAY,EAAE;IACjB;IACA,oBAAOJ,OAAA;MAAGc,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3F;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKb,YAAY,CAACkB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC7BrB,OAAA;MACEuB,GAAG,EAAG,mCAAkCnB,YAAY,CAACoB,WAAY,EAAE;MACnEC,GAAG,EAAErB,YAAY,CAACkB;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFrB,OAAA;MAAAiB,QAAA,EAAIb,YAAY,CAACsB;IAAQ;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BrB,OAAA;MAAAiB,QAAA,GAAG,gBAAc,EAACb,YAAY,CAACuB,YAAY;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChDrB,OAAA;MAAAiB,QAAA,GAAG,gBAAc,EAACb,YAAY,CAACwB,YAAY;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCIF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}